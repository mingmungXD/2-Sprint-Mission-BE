// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int      @id @default(autoincrement())
  email              String   @unique
  nickname           String
  password           String
  image              String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  products           Product[]
  comments           Comment[]
  likes              Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Int
  images      String[]
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  comments    Comment[]
  likes       Like[]    @relation("ProductLikes")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Like {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  productId   Int?
  product     Product? @relation("ProductLikes", fields: [productId], references: [id])
  createdAt   DateTime @default(now())
}